using Gtk;

using AccountingSoftware;
using StorageAndTrade_1_0;

class РухДокументівПоРегістрах_ТовариНаСкладах
{
    public static void Вивести(VBox vBox, DocumentPointer ДокументВказівник)
    {
        Dictionary<string, object> paramQuery = new Dictionary<string, object>();
        paramQuery.Add("ДокументВказівник", ДокументВказівник.UnigueID.UGuid);

        string[] allColumnsName;
        List<Dictionary<string, object>> listRow;

        Config.Kernel!.DataBase.SelectRequest(РухДокументівПоРегістрах_Запити.ТовариНаСкладах, paramQuery, out allColumnsName, out listRow);

        Expander expander = new Expander("Товари на складах") { Expanded = true };
        expander.Add(vBox);

        Dictionary<string, string> visibleColumns = new Dictionary<string, string>();

        visibleColumns.Add("period", "Період");
        visibleColumns.Add("income", "");
        visibleColumns.Add("Номенклатура_Назва", "Номенклатура");
        visibleColumns.Add("ХарактеристикаНоменклатури_Назва", "Характеристика");
        visibleColumns.Add("Серія_Номер", "Серія");
        visibleColumns.Add("Склад_Назва", "Склад");
        visibleColumns.Add("ВНаявності", "В наявності");
        visibleColumns.Add("ДоВідвантаження", "До відвантаження");

        //Store
        Type[] type = new Type[allColumnsName.Length];
        for (int i = 0; i < allColumnsName.Length; i++)
            type[i] = typeof(string);

        ListStore store = new ListStore(type);
        TreeView treeView = new TreeView(store);

        //Columns
        for (int i = 0; i < allColumnsName.Length; i++)
        {
            string column = allColumnsName[i];
            bool isVisible = visibleColumns.ContainsKey(column);

            TreeViewColumn treeColumn = new TreeViewColumn(isVisible ? visibleColumns[column] : "", new CellRendererText(), "text", i);
            treeColumn.Visible = isVisible;

            treeView.AppendColumn(treeColumn);
        }

        //Data
        foreach (Dictionary<string, object> row in listRow)
        {
            string[] value = new string[allColumnsName.Length];

            for (int i = 0; i < allColumnsName.Length; i++)
            {
                string column = allColumnsName[i];

                if (column == "income")
                    value[i] = (bool)row[column] ? "+" : "-";
                else
                    value[i] = row[column]?.ToString() ?? "";
            }

            store.AppendValues(value);
        }
    }
}