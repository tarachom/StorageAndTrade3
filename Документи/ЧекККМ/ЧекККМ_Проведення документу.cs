

/*
        ЧекККМ_SpendTheDocument.cs
        Модуль проведення документу
*/

using AccountingSoftware;
using GeneratedCode;

using GeneratedCode.Довідники;
using GeneratedCode.РегістриНакопичення;
using GeneratedCode.РегістриВідомостей;

namespace GeneratedCode.Документи
{
    static class ЧекККМ_SpendTheDocument
    {
        public static async ValueTask<bool> Spend(ЧекККМ_Objest ДокументОбєкт)
        {
            try
            {
                #region Підготовка

                Dictionary<int, Номенклатура_Objest> СписокНоменклатури = new Dictionary<int, Номенклатура_Objest>();

                foreach (ЧекККМ_Товари_TablePart.Record ТовариРядок in ДокументОбєкт.Товари_TablePart.Records)
                {
                    if (ТовариРядок.Номенклатура.IsEmpty())
                        throw new Exception($"Рядок {ТовариРядок.НомерРядка}. Не заповнене поле Номенклатура");

                    if (!(ТовариРядок.КількістьУпаковок > 0))
                        throw new Exception($"Рядок {ТовариРядок.НомерРядка}. Коєфіціент має бути 1 або більше");

                    if (!(ТовариРядок.Кількість > 0))
                        throw new Exception($"Рядок {ТовариРядок.НомерРядка}. Кількість має бути більшою 0");

                    СписокНоменклатури.Add(ТовариРядок.НомерРядка, (await ТовариРядок.Номенклатура.GetDirectoryObject())!);

                    if (СписокНоменклатури[ТовариРядок.НомерРядка].ТипНоменклатури == Перелічення.ТипиНоменклатури.Товар)
                    {
                        //
                        //Резерви та вільні залишки
                        //

                        var recordResult = await СпільніФункції.ОтриматиРезервТоваруНаСкладі(
                            ТовариРядок.Номенклатура, ТовариРядок.ХарактеристикаНоменклатури, ДокументОбєкт.Склад, ДокументОбєкт.UnigueID, ДокументОбєкт.ДатаДок);

                        decimal ВНаявності = 0;
                        decimal ВРезервіЗіСкладу = 0;

                        if (recordResult.Result)
                        {
                            var Резерв = recordResult.ListRow;

                            ВНаявності = (decimal)Резерв[0]["ВНаявності"];
                            ВРезервіЗіСкладу = (decimal)Резерв[0]["ВРезервіЗіСкладу"];
                        }

                        decimal Кількість = ТовариРядок.Кількість * ТовариРядок.КількістьУпаковок;

                        if (ВНаявності - ВРезервіЗіСкладу < Кількість)
                        {
                            throw new Exception($"Рядок {ТовариРядок.НомерРядка}. " +
                                $"Залишок товару {СписокНоменклатури[ТовариРядок.НомерРядка].Назва} на складі {await ДокументОбєкт.Склад.GetPresentation()} дорівнює {ВНаявності}," +
                                $"в резерві {ВРезервіЗіСкладу}, потрібно {Кількість}");
                        }
                    }
                    else
                        throw new Exception($"Рядок {ТовариРядок.НомерРядка}. В документі можуть бути тільки товари!");
                }

                #endregion

                #region ВільніЗалишки

                ВільніЗалишки_RecordsSet вільніЗалишки_RecordsSet = new ВільніЗалишки_RecordsSet();

                foreach (ЧекККМ_Товари_TablePart.Record ТовариРядок in ДокументОбєкт.Товари_TablePart.Records)
                    if (СписокНоменклатури[ТовариРядок.НомерРядка].ТипНоменклатури == Перелічення.ТипиНоменклатури.Товар)
                        вільніЗалишки_RecordsSet.Records.Add(new()
                        {
                            Income = false,
                            Номенклатура = ТовариРядок.Номенклатура,
                            ХарактеристикаНоменклатури = ТовариРядок.ХарактеристикаНоменклатури,
                            Склад = ДокументОбєкт.Склад,
                            ВНаявності = ТовариРядок.Кількість * ТовариРядок.КількістьУпаковок
                        });

                await вільніЗалишки_RecordsSet.Save(ДокументОбєкт.ДатаДок, ДокументОбєкт.GetBasis());

                #endregion

                #region Товари на складах

                ТовариНаСкладах_RecordsSet товариНаСкладах_RecordsSet = new ТовариНаСкладах_RecordsSet();

                foreach (ЧекККМ_Товари_TablePart.Record ТовариРядок in ДокументОбєкт.Товари_TablePart.Records)
                    if (СписокНоменклатури[ТовариРядок.НомерРядка].ТипНоменклатури == Перелічення.ТипиНоменклатури.Товар)
                        товариНаСкладах_RecordsSet.Records.Add(new()
                        {
                            Income = false,
                            Номенклатура = ТовариРядок.Номенклатура,
                            ХарактеристикаНоменклатури = ТовариРядок.ХарактеристикаНоменклатури,
                            Серія = ТовариРядок.Серія,
                            Склад = ДокументОбєкт.Склад,
                            ВНаявності = ТовариРядок.Кількість * ТовариРядок.КількістьУпаковок
                        });

                await товариНаСкладах_RecordsSet.Save(ДокументОбєкт.ДатаДок, ДокументОбєкт.GetBasis());

                #endregion

                return true;
            }
            catch (Exception ex)
            {
                await СпільніФункції.ДокументНеПроводиться(ДокументОбєкт, ДокументОбєкт.Назва, ex.Message);
                return false;
            }
        }

        public static async ValueTask Clear(ЧекККМ_Objest ДокументОбєкт)
        {
            await ValueTask.FromResult(true);
        }
    }
}
